// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.0
// source: protos/emailsettings_v1.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Category      string            `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Code          string            `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	CorrelationId string            `protobuf:"bytes,4,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Status        string            `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Message       string            `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	Cause         string            `protobuf:"bytes,7,opt,name=cause,proto3" json:"cause,omitempty"`
	StackTrace    string            `protobuf:"bytes,8,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	Details       map[string]string `protobuf:"bytes,9,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ErrorDescription) Reset() {
	*x = ErrorDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_emailsettings_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorDescription) ProtoMessage() {}

func (x *ErrorDescription) ProtoReflect() protoreflect.Message {
	mi := &file_protos_emailsettings_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorDescription.ProtoReflect.Descriptor instead.
func (*ErrorDescription) Descriptor() ([]byte, []int) {
	return file_protos_emailsettings_v1_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorDescription) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ErrorDescription) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ErrorDescription) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ErrorDescription) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *ErrorDescription) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ErrorDescription) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorDescription) GetCause() string {
	if x != nil {
		return x.Cause
	}
	return ""
}

func (x *ErrorDescription) GetStackTrace() string {
	if x != nil {
		return x.StackTrace
	}
	return ""
}

func (x *ErrorDescription) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

type PagingParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skip  int64 `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	Take  int32 `protobuf:"varint,2,opt,name=take,proto3" json:"take,omitempty"`
	Total bool  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *PagingParams) Reset() {
	*x = PagingParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_emailsettings_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingParams) ProtoMessage() {}

func (x *PagingParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_emailsettings_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingParams.ProtoReflect.Descriptor instead.
func (*PagingParams) Descriptor() ([]byte, []int) {
	return file_protos_emailsettings_v1_proto_rawDescGZIP(), []int{1}
}

func (x *PagingParams) GetSkip() int64 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *PagingParams) GetTake() int32 {
	if x != nil {
		return x.Take
	}
	return 0
}

func (x *PagingParams) GetTotal() bool {
	if x != nil {
		return x.Total
	}
	return false
}

type EmailSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Recipient information
	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email    string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Language string `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// EmailSettings management
	Subscriptions string `protobuf:"bytes,5,opt,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	Verified      bool   `protobuf:"varint,6,opt,name=verified,proto3" json:"verified,omitempty"`
	VerCode       string `protobuf:"bytes,7,opt,name=ver_code,json=verCode,proto3" json:"ver_code,omitempty"`
	VerExpireTime string `protobuf:"bytes,8,opt,name=ver_expire_time,json=verExpireTime,proto3" json:"ver_expire_time,omitempty"`
	// Custom fields
	CustomHdr string `protobuf:"bytes,9,opt,name=custom_hdr,json=customHdr,proto3" json:"custom_hdr,omitempty"`
	CustomDat string `protobuf:"bytes,10,opt,name=custom_dat,json=customDat,proto3" json:"custom_dat,omitempty"`
}

func (x *EmailSettings) Reset() {
	*x = EmailSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_emailsettings_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailSettings) ProtoMessage() {}

func (x *EmailSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_emailsettings_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailSettings.ProtoReflect.Descriptor instead.
func (*EmailSettings) Descriptor() ([]byte, []int) {
	return file_protos_emailsettings_v1_proto_rawDescGZIP(), []int{2}
}

func (x *EmailSettings) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EmailSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmailSettings) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *EmailSettings) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *EmailSettings) GetSubscriptions() string {
	if x != nil {
		return x.Subscriptions
	}
	return ""
}

func (x *EmailSettings) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *EmailSettings) GetVerCode() string {
	if x != nil {
		return x.VerCode
	}
	return ""
}

func (x *EmailSettings) GetVerExpireTime() string {
	if x != nil {
		return x.VerExpireTime
	}
	return ""
}

func (x *EmailSettings) GetCustomHdr() string {
	if x != nil {
		return x.CustomHdr
	}
	return ""
}

func (x *EmailSettings) GetCustomDat() string {
	if x != nil {
		return x.CustomDat
	}
	return ""
}

type EmailSettingsPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*EmailSettings `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *EmailSettingsPage) Reset() {
	*x = EmailSettingsPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_emailsettings_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailSettingsPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailSettingsPage) ProtoMessage() {}

func (x *EmailSettingsPage) ProtoReflect() protoreflect.Message {
	mi := &file_protos_emailsettings_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailSettingsPage.ProtoReflect.Descriptor instead.
func (*EmailSettingsPage) Descriptor() ([]byte, []int) {
	return file_protos_emailsettings_v1_proto_rawDescGZIP(), []int{3}
}

func (x *EmailSettingsPage) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *EmailSettingsPage) GetData() []*EmailSettings {
	if x != nil {
		return x.Data
	}
	return nil
}

// The request message containing the settings ids request.
type EmailSettingsIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string   `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	RecipientIds  []string `protobuf:"bytes,2,rep,name=recipient_ids,json=recipientIds,proto3" json:"recipient_ids,omitempty"`
}

func (x *EmailSettingsIdsRequest) Reset() {
	*x = EmailSettingsIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_emailsettings_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailSettingsIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailSettingsIdsRequest) ProtoMessage() {}

func (x *EmailSettingsIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_emailsettings_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailSettingsIdsRequest.ProtoReflect.Descriptor instead.
func (*EmailSettingsIdsRequest) Descriptor() ([]byte, []int) {
	return file_protos_emailsettings_v1_proto_rawDescGZIP(), []int{4}
}

func (x *EmailSettingsIdsRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *EmailSettingsIdsRequest) GetRecipientIds() []string {
	if x != nil {
		return x.RecipientIds
	}
	return nil
}

// The response message containing the settings list response
type EmailSettingsListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Settings []*EmailSettings  `protobuf:"bytes,2,rep,name=settings,proto3" json:"settings,omitempty"`
}

func (x *EmailSettingsListReply) Reset() {
	*x = EmailSettingsListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_emailsettings_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailSettingsListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailSettingsListReply) ProtoMessage() {}

func (x *EmailSettingsListReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_emailsettings_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailSettingsListReply.ProtoReflect.Descriptor instead.
func (*EmailSettingsListReply) Descriptor() ([]byte, []int) {
	return file_protos_emailsettings_v1_proto_rawDescGZIP(), []int{5}
}

func (x *EmailSettingsListReply) GetError() *ErrorDescription {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *EmailSettingsListReply) GetSettings() []*EmailSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// The request message containing the settings id request.
type EmailSettingsIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	RecipientId   string `protobuf:"bytes,2,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
}

func (x *EmailSettingsIdRequest) Reset() {
	*x = EmailSettingsIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_emailsettings_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailSettingsIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailSettingsIdRequest) ProtoMessage() {}

func (x *EmailSettingsIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_emailsettings_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailSettingsIdRequest.ProtoReflect.Descriptor instead.
func (*EmailSettingsIdRequest) Descriptor() ([]byte, []int) {
	return file_protos_emailsettings_v1_proto_rawDescGZIP(), []int{6}
}

func (x *EmailSettingsIdRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *EmailSettingsIdRequest) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

// The request message containing the settings email request.
type EmailSettingsEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Email         string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *EmailSettingsEmailRequest) Reset() {
	*x = EmailSettingsEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_emailsettings_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailSettingsEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailSettingsEmailRequest) ProtoMessage() {}

func (x *EmailSettingsEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_emailsettings_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailSettingsEmailRequest.ProtoReflect.Descriptor instead.
func (*EmailSettingsEmailRequest) Descriptor() ([]byte, []int) {
	return file_protos_emailsettings_v1_proto_rawDescGZIP(), []int{7}
}

func (x *EmailSettingsEmailRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *EmailSettingsEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// The request message containing the settings object request.
type EmailSettingsObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string         `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Settings      *EmailSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *EmailSettingsObjectRequest) Reset() {
	*x = EmailSettingsObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_emailsettings_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailSettingsObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailSettingsObjectRequest) ProtoMessage() {}

func (x *EmailSettingsObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_emailsettings_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailSettingsObjectRequest.ProtoReflect.Descriptor instead.
func (*EmailSettingsObjectRequest) Descriptor() ([]byte, []int) {
	return file_protos_emailsettings_v1_proto_rawDescGZIP(), []int{8}
}

func (x *EmailSettingsObjectRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *EmailSettingsObjectRequest) GetSettings() *EmailSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// The response message containing the settings object response
type EmailSettingsObjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Settings *EmailSettings    `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *EmailSettingsObjectReply) Reset() {
	*x = EmailSettingsObjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_emailsettings_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailSettingsObjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailSettingsObjectReply) ProtoMessage() {}

func (x *EmailSettingsObjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_emailsettings_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailSettingsObjectReply.ProtoReflect.Descriptor instead.
func (*EmailSettingsObjectReply) Descriptor() ([]byte, []int) {
	return file_protos_emailsettings_v1_proto_rawDescGZIP(), []int{9}
}

func (x *EmailSettingsObjectReply) GetError() *ErrorDescription {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *EmailSettingsObjectReply) GetSettings() *EmailSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// The request message containing the settings recipient request.
type EmailSettingsRecipientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	RecipientId   string `protobuf:"bytes,2,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Email         string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Language      string `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *EmailSettingsRecipientRequest) Reset() {
	*x = EmailSettingsRecipientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_emailsettings_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailSettingsRecipientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailSettingsRecipientRequest) ProtoMessage() {}

func (x *EmailSettingsRecipientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_emailsettings_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailSettingsRecipientRequest.ProtoReflect.Descriptor instead.
func (*EmailSettingsRecipientRequest) Descriptor() ([]byte, []int) {
	return file_protos_emailsettings_v1_proto_rawDescGZIP(), []int{10}
}

func (x *EmailSettingsRecipientRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *EmailSettingsRecipientRequest) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *EmailSettingsRecipientRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmailSettingsRecipientRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *EmailSettingsRecipientRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

// The request message containing the settings subscriptions request.
type EmailSettingsSubscriptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	RecipientId   string `protobuf:"bytes,2,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	Subscriptions string `protobuf:"bytes,3,opt,name=subscriptions,proto3" json:"subscriptions,omitempty"`
}

func (x *EmailSettingsSubscriptionsRequest) Reset() {
	*x = EmailSettingsSubscriptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_emailsettings_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailSettingsSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailSettingsSubscriptionsRequest) ProtoMessage() {}

func (x *EmailSettingsSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_emailsettings_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailSettingsSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*EmailSettingsSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_protos_emailsettings_v1_proto_rawDescGZIP(), []int{11}
}

func (x *EmailSettingsSubscriptionsRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *EmailSettingsSubscriptionsRequest) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *EmailSettingsSubscriptionsRequest) GetSubscriptions() string {
	if x != nil {
		return x.Subscriptions
	}
	return ""
}

// The request message containing the settings code request.
type EmailSettingsCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	RecipientId   string `protobuf:"bytes,2,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	Code          string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *EmailSettingsCodeRequest) Reset() {
	*x = EmailSettingsCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_emailsettings_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailSettingsCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailSettingsCodeRequest) ProtoMessage() {}

func (x *EmailSettingsCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_emailsettings_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailSettingsCodeRequest.ProtoReflect.Descriptor instead.
func (*EmailSettingsCodeRequest) Descriptor() ([]byte, []int) {
	return file_protos_emailsettings_v1_proto_rawDescGZIP(), []int{12}
}

func (x *EmailSettingsCodeRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *EmailSettingsCodeRequest) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *EmailSettingsCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// The response message containing the settings empty response
type EmailSettingsEmptyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *EmailSettingsEmptyReply) Reset() {
	*x = EmailSettingsEmptyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_emailsettings_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailSettingsEmptyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailSettingsEmptyReply) ProtoMessage() {}

func (x *EmailSettingsEmptyReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_emailsettings_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailSettingsEmptyReply.ProtoReflect.Descriptor instead.
func (*EmailSettingsEmptyReply) Descriptor() ([]byte, []int) {
	return file_protos_emailsettings_v1_proto_rawDescGZIP(), []int{13}
}

func (x *EmailSettingsEmptyReply) GetError() *ErrorDescription {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_protos_emailsettings_v1_proto protoreflect.FileDescriptor

var file_protos_emailsettings_v1_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76,
	0x31, 0x22, 0xed, 0x02, 0x0a, 0x10, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f,
	0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x4c, 0x0a, 0x0c, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0xa8, 0x02, 0x0a, 0x0d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76,
	0x65, 0x72, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x68, 0x64, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x48, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x22, 0x5e, 0x0a, 0x11, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x65, 0x0a, 0x17, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x49, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x73, 0x22, 0x8f, 0x01, 0x0a, 0x16, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x22, 0x62, 0x0a, 0x16, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x19, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x22, 0x80, 0x01, 0x0a, 0x1a, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x18, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x5f, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x08, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31,
	0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x1d, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f,
	0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x21, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x78, 0x0a, 0x18, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x53, 0x0a, 0x17, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32,
	0xf0, 0x08, 0x0a, 0x0e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x78, 0x12, 0x6c, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x12, 0x29, 0x2e, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x6c, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x28, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x72,
	0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x62,
	0x79, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2b, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x6a, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x2c, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x73,
	0x0a, 0x15, 0x73, 0x65, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2c, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0d, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x11, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31,
	0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x15, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x62,
	0x79, 0x5f, 0x69, 0x64, 0x12, 0x28, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x13, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0c, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x2e, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x42, 0x65, 0x0a, 0x29, 0x70, 0x69, 0x70, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x31, 0x42,
	0x14, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0xa2, 0x02, 0x15, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x49, 0x4e,
	0x47, 0x53, 0x5f, 0x43, 0x4d, 0x44, 0x5f, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_protos_emailsettings_v1_proto_rawDescOnce sync.Once
	file_protos_emailsettings_v1_proto_rawDescData = file_protos_emailsettings_v1_proto_rawDesc
)

func file_protos_emailsettings_v1_proto_rawDescGZIP() []byte {
	file_protos_emailsettings_v1_proto_rawDescOnce.Do(func() {
		file_protos_emailsettings_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_emailsettings_v1_proto_rawDescData)
	})
	return file_protos_emailsettings_v1_proto_rawDescData
}

var file_protos_emailsettings_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_protos_emailsettings_v1_proto_goTypes = []interface{}{
	(*ErrorDescription)(nil),                  // 0: emailsettings_v1.ErrorDescription
	(*PagingParams)(nil),                      // 1: emailsettings_v1.PagingParams
	(*EmailSettings)(nil),                     // 2: emailsettings_v1.EmailSettings
	(*EmailSettingsPage)(nil),                 // 3: emailsettings_v1.EmailSettingsPage
	(*EmailSettingsIdsRequest)(nil),           // 4: emailsettings_v1.EmailSettingsIdsRequest
	(*EmailSettingsListReply)(nil),            // 5: emailsettings_v1.EmailSettingsListReply
	(*EmailSettingsIdRequest)(nil),            // 6: emailsettings_v1.EmailSettingsIdRequest
	(*EmailSettingsEmailRequest)(nil),         // 7: emailsettings_v1.EmailSettingsEmailRequest
	(*EmailSettingsObjectRequest)(nil),        // 8: emailsettings_v1.EmailSettingsObjectRequest
	(*EmailSettingsObjectReply)(nil),          // 9: emailsettings_v1.EmailSettingsObjectReply
	(*EmailSettingsRecipientRequest)(nil),     // 10: emailsettings_v1.EmailSettingsRecipientRequest
	(*EmailSettingsSubscriptionsRequest)(nil), // 11: emailsettings_v1.EmailSettingsSubscriptionsRequest
	(*EmailSettingsCodeRequest)(nil),          // 12: emailsettings_v1.EmailSettingsCodeRequest
	(*EmailSettingsEmptyReply)(nil),           // 13: emailsettings_v1.EmailSettingsEmptyReply
	nil,                                       // 14: emailsettings_v1.ErrorDescription.DetailsEntry
}
var file_protos_emailsettings_v1_proto_depIdxs = []int32{
	14, // 0: emailsettings_v1.ErrorDescription.details:type_name -> emailsettings_v1.ErrorDescription.DetailsEntry
	2,  // 1: emailsettings_v1.EmailSettingsPage.data:type_name -> emailsettings_v1.EmailSettings
	0,  // 2: emailsettings_v1.EmailSettingsListReply.error:type_name -> emailsettings_v1.ErrorDescription
	2,  // 3: emailsettings_v1.EmailSettingsListReply.settings:type_name -> emailsettings_v1.EmailSettings
	2,  // 4: emailsettings_v1.EmailSettingsObjectRequest.settings:type_name -> emailsettings_v1.EmailSettings
	0,  // 5: emailsettings_v1.EmailSettingsObjectReply.error:type_name -> emailsettings_v1.ErrorDescription
	2,  // 6: emailsettings_v1.EmailSettingsObjectReply.settings:type_name -> emailsettings_v1.EmailSettings
	0,  // 7: emailsettings_v1.EmailSettingsEmptyReply.error:type_name -> emailsettings_v1.ErrorDescription
	4,  // 8: emailsettings_v1.EmailSettingsx.get_settings_by_ids:input_type -> emailsettings_v1.EmailSettingsIdsRequest
	6,  // 9: emailsettings_v1.EmailSettingsx.get_settings_by_id:input_type -> emailsettings_v1.EmailSettingsIdRequest
	7,  // 10: emailsettings_v1.EmailSettingsx.get_settings_by_email:input_type -> emailsettings_v1.EmailSettingsEmailRequest
	8,  // 11: emailsettings_v1.EmailSettingsx.set_settings:input_type -> emailsettings_v1.EmailSettingsObjectRequest
	8,  // 12: emailsettings_v1.EmailSettingsx.set_verified_settings:input_type -> emailsettings_v1.EmailSettingsObjectRequest
	10, // 13: emailsettings_v1.EmailSettingsx.set_recipient:input_type -> emailsettings_v1.EmailSettingsRecipientRequest
	11, // 14: emailsettings_v1.EmailSettingsx.set_subscriptions:input_type -> emailsettings_v1.EmailSettingsSubscriptionsRequest
	6,  // 15: emailsettings_v1.EmailSettingsx.delete_settings_by_id:input_type -> emailsettings_v1.EmailSettingsIdRequest
	6,  // 16: emailsettings_v1.EmailSettingsx.resend_verification:input_type -> emailsettings_v1.EmailSettingsIdRequest
	12, // 17: emailsettings_v1.EmailSettingsx.verify_email:input_type -> emailsettings_v1.EmailSettingsCodeRequest
	5,  // 18: emailsettings_v1.EmailSettingsx.get_settings_by_ids:output_type -> emailsettings_v1.EmailSettingsListReply
	9,  // 19: emailsettings_v1.EmailSettingsx.get_settings_by_id:output_type -> emailsettings_v1.EmailSettingsObjectReply
	9,  // 20: emailsettings_v1.EmailSettingsx.get_settings_by_email:output_type -> emailsettings_v1.EmailSettingsObjectReply
	9,  // 21: emailsettings_v1.EmailSettingsx.set_settings:output_type -> emailsettings_v1.EmailSettingsObjectReply
	9,  // 22: emailsettings_v1.EmailSettingsx.set_verified_settings:output_type -> emailsettings_v1.EmailSettingsObjectReply
	9,  // 23: emailsettings_v1.EmailSettingsx.set_recipient:output_type -> emailsettings_v1.EmailSettingsObjectReply
	9,  // 24: emailsettings_v1.EmailSettingsx.set_subscriptions:output_type -> emailsettings_v1.EmailSettingsObjectReply
	13, // 25: emailsettings_v1.EmailSettingsx.delete_settings_by_id:output_type -> emailsettings_v1.EmailSettingsEmptyReply
	13, // 26: emailsettings_v1.EmailSettingsx.resend_verification:output_type -> emailsettings_v1.EmailSettingsEmptyReply
	13, // 27: emailsettings_v1.EmailSettingsx.verify_email:output_type -> emailsettings_v1.EmailSettingsEmptyReply
	18, // [18:28] is the sub-list for method output_type
	8,  // [8:18] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_protos_emailsettings_v1_proto_init() }
func file_protos_emailsettings_v1_proto_init() {
	if File_protos_emailsettings_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_emailsettings_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_emailsettings_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_emailsettings_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_emailsettings_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailSettingsPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_emailsettings_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailSettingsIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_emailsettings_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailSettingsListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_emailsettings_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailSettingsIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_emailsettings_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailSettingsEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_emailsettings_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailSettingsObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_emailsettings_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailSettingsObjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_emailsettings_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailSettingsRecipientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_emailsettings_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailSettingsSubscriptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_emailsettings_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailSettingsCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_emailsettings_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailSettingsEmptyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_emailsettings_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_emailsettings_v1_proto_goTypes,
		DependencyIndexes: file_protos_emailsettings_v1_proto_depIdxs,
		MessageInfos:      file_protos_emailsettings_v1_proto_msgTypes,
	}.Build()
	File_protos_emailsettings_v1_proto = out.File
	file_protos_emailsettings_v1_proto_rawDesc = nil
	file_protos_emailsettings_v1_proto_goTypes = nil
	file_protos_emailsettings_v1_proto_depIdxs = nil
}
